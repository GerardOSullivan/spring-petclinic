# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml


trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'gerardosullivan'
    scannerMode: 'Other'
    extraProperties: |
      sonar.projectKey=GerardOSullivan_spring-petclinic
      sonar.projectName=spring-petclinic


- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'spring-javaformat:apply package'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Path'
    mavenPath: '/usr/share/apache-maven-3.8.8'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sqMavenPluginVersionChoice: 'pom'
    
- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '300'
    

- task: Docker@2
  inputs:
    containerRegistry: 'Docker service connection'
    repository: 'gerardosullivan / petclinic-azure'
    command: 'build'
    Dockerfile: '**/Dockerfile'
    arguments: '--build-arg BUILD_NUMBER=$(Build.BuildNumber)'
    tags: 'latest'

- task: Docker@2
  inputs:
    containerRegistry: 'Docker service connection'
    repository: 'gerardosullivan / petclinic-azure'
    command: 'push'
    tags: 'latest'
